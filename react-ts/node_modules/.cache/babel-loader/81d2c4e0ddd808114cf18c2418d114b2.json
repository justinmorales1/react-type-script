{"ast":null,"code":"var _jsxFileName = \"/Users/justin/codebase/PublicApps/react-type-script/src/refs/UserSearch.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst users = [{\n  name: \"Elvira\",\n  age: 30\n}, {\n  name: \"Stewie\",\n  age: 30\n}, {\n  name: \"Max\",\n  age: 30\n}, {\n  name: \"Rupert\",\n  age: 30\n}, {\n  name: \"Millie\",\n  age: 30\n}];\n\nconst UserSearch = () => {\n  _s();\n\n  const inputRef = useRef(null);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState();\n  useEffect(() => {\n    //This is known as a type guard.\n    if (!inputRef.current) {\n      return;\n    }\n\n    inputRef.current.focus();\n  }, []);\n\n  const onClick = () => {\n    const foundUser = users.find(user => {\n      return user.name === name;\n    });\n    setUser(foundUser);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"User Search\", /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClick,\n      children: \" Find User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [user === null || user === void 0 ? void 0 : user.name, user === null || user === void 0 ? void 0 : user.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserSearch, \"cM3d4nHLOw35hedoHtLV8xqK5To=\");\n\n_c = UserSearch;\nexport default UserSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserSearch\");","map":{"version":3,"sources":["/Users/justin/codebase/PublicApps/react-type-script/src/refs/UserSearch.tsx"],"names":["useState","useRef","useEffect","users","name","age","UserSearch","inputRef","setName","user","setUser","current","focus","onClick","foundUser","find","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,MAAnB,EAA2BC,SAA3B,QAA4C,OAA5C;;AAEA,MAAMC,KAAK,GAAG,CACZ;AAAEC,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CADY,EAEZ;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CAFY,EAGZ;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,GAAG,EAAE;AAApB,CAHY,EAIZ;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CAJY,EAKZ;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,GAAG,EAAE;AAAvB,CALY,CAAd;;AAQA,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAMC,QAAQ,GAAGN,MAAM,CAA0B,IAA1B,CAAvB;AACA,QAAM,CAACG,IAAD,EAAOI,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAI,CAACK,QAAQ,CAACI,OAAd,EAAuB;AACrB;AACD;;AACDJ,IAAAA,QAAQ,CAACI,OAAT,CAAiBC,KAAjB;AACD,GANQ,EAMP,EANO,CAAT;;AAQA,QAAMC,OAAO,GAAG,MAAM;AACnB,UAAMC,SAAS,GAAGX,KAAK,CAACY,IAAN,CAAYN,IAAD,IAAU;AACpC,aAAOA,IAAI,CAACL,IAAL,KAAcA,IAArB;AACF,KAFiB,CAAlB;AAIAM,IAAAA,OAAO,CAACI,SAAD,CAAP;AACF,GAND;;AAQA,sBACE;AAAA,2CAEE;AAAO,MAAA,GAAG,EAAEP,QAAZ;AAAsB,MAAA,KAAK,EAAEH,IAA7B;AAAmC,MAAA,QAAQ,EAAGY,CAAC,IAAIR,OAAO,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1D;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEL,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE;AAAA,iBACGJ,IADH,aACGA,IADH,uBACGA,IAAI,CAAEL,IADT,EAEGK,IAFH,aAEGA,IAFH,uBAEGA,IAAI,CAAEJ,GAFT;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAhCD;;GAAMC,U;;KAAAA,U;AAkCN,eAAeA,UAAf","sourcesContent":["import { useState, useRef, useEffect } from 'react';\n\nconst users = [\n  { name: \"Elvira\", age: 30},\n  { name: \"Stewie\", age: 30},\n  { name: \"Max\", age: 30},\n  { name: \"Rupert\", age: 30},\n  { name: \"Millie\", age: 30}\n]\n\nconst UserSearch: React.FC = () => {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  const [name, setName] = useState('');\n  const [user, setUser] = useState<{name: string, age:number} | undefined>();\n\n  useEffect(() => {\n    //This is known as a type guard.\n    if (!inputRef.current) {\n      return;\n    }\n    inputRef.current.focus()\n  },[])\n\n  const onClick = () => {\n     const foundUser = users.find((user) => {\n        return user.name === name;\n     })\n\n     setUser(foundUser);\n  } \n\n  return (\n    <div>\n      User Search\n      <input ref={inputRef} value={name} onChange={ e => setName(e.target.value)} />\n      <button onClick={onClick} > Find User</button>\n      <div>\n        {user?.name}\n        {user?.age}\n      </div>\n    </div>\n  )\n}\n\nexport default UserSearch;"]},"metadata":{},"sourceType":"module"}