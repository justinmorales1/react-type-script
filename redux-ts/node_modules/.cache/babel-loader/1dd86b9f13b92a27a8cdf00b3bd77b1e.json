{"ast":null,"code":"import axios from 'axios';\nimport { ActionType } from '../action-types';\nexport const SearchRepositories = term => {\n  return async dispatch => {\n    dispatch({\n      type: ActionType.SEARCH_REPOSITORIES\n    });\n\n    try {\n      const {\n        data\n      } = await axios.get('https://registry.npmjs.org/-/v1/search', {\n        params: {\n          text: term\n        }\n      });\n      const names = data.objects.map(result => {\n        return result.package.name;\n      });\n      dispatch({\n        type: ActionType.SEARCH_REPOSITORIES_SUCCESS,\n        payload: names\n      });\n    } catch (err) {\n      dispatch({\n        type: ActionType.SEARCH_REPOSITORIES_ERROR,\n        payload: err.message\n      });\n    }\n  };\n};\n_c = SearchRepositories;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchRepositories\");","map":{"version":3,"sources":["/Users/justin/codebase/PublicApps/react-type-script/redux-ts/src/redux/action-creators/index.ts"],"names":["axios","ActionType","SearchRepositories","term","dispatch","type","SEARCH_REPOSITORIES","data","get","params","text","names","objects","map","result","package","name","SEARCH_REPOSITORIES_SUCCESS","payload","err","SEARCH_REPOSITORIES_ERROR","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAIA,OAAO,MAAMC,kBAAkB,GAAIC,IAAD,IAAkB;AAClD,SAAO,MAAOC,QAAP,IAAsC;AAC3CA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,UAAU,CAACK;AADV,KAAD,CAAR;;AAIF,QAAI;AACF,YAAM;AAAEC,QAAAA;AAAF,UAAW,MAAMP,KAAK,CAACQ,GAAN,CAAU,wCAAV,EAAmD;AACxEC,QAAAA,MAAM,EAAE;AACNC,UAAAA,IAAI,EAAEP;AADA;AADgE,OAAnD,CAAvB;AAMA,YAAMQ,KAAK,GAAGJ,IAAI,CAACK,OAAL,CAAaC,GAAb,CAAkBC,MAAD,IAAiB;AAC9C,eAAOA,MAAM,CAACC,OAAP,CAAeC,IAAtB;AACD,OAFa,CAAd;AAIAZ,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,UAAU,CAACgB,2BADV;AAEPC,QAAAA,OAAO,EAAEP;AAFF,OAAD,CAAR;AAKD,KAhBD,CAgBE,OAAOQ,GAAP,EAAY;AACZf,MAAAA,QAAQ,CAAC;AACPC,QAAAA,IAAI,EAAEJ,UAAU,CAACmB,yBADV;AAEPF,QAAAA,OAAO,EAAEC,GAAG,CAACE;AAFN,OAAD,CAAR;AAID;AAEA,GA5BD;AA6BD,CA9BM;KAAMnB,kB","sourcesContent":["import axios from 'axios';\nimport { ActionType } from '../action-types';\nimport { Action } from '../actions';\nimport { Dispatch } from 'redux';\n\nexport const SearchRepositories = (term: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.SEARCH_REPOSITORIES\n    });\n\n  try {\n    const { data } = await axios.get('https://registry.npmjs.org/-/v1/search',{\n      params: {\n        text: term\n      }\n    })\n\n    const names = data.objects.map((result: any) => {\n      return result.package.name\n    })\n\n    dispatch({\n      type: ActionType.SEARCH_REPOSITORIES_SUCCESS,\n      payload: names\n    })\n\n  } catch (err) {\n    dispatch({\n      type: ActionType.SEARCH_REPOSITORIES_ERROR,\n      payload: err.message\n    })\n  }\n\n  }\n};"]},"metadata":{},"sourceType":"module"}