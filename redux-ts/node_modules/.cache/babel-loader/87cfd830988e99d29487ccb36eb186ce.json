{"ast":null,"code":"import { ActionType } from '../action-types';\nconst initialState = {\n  loading: false,\n  error: null,\n  data: []\n};\n\nconst repositoriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ActionType.SEARCH_REPOSITORIES:\n      return {\n        loading: true,\n        error: null,\n        data: []\n      };\n\n    case ActionType.SEARCH_REPOSITORIES_SUCCESS:\n      return {\n        loading: false,\n        error: null,\n        data: action.payload\n      };\n\n    case ActionType.SEARCH_REPOSITORIES_ERROR:\n      return {\n        loading: false,\n        error: action.payload,\n        data: []\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default repositoriesReducer;","map":{"version":3,"sources":["/Users/justin/codebase/PublicApps/react-type-script/redux-ts/src/redux/reducers/repositoriesReducer.ts"],"names":["ActionType","initialState","loading","error","data","repositoriesReducer","state","action","type","SEARCH_REPOSITORIES","SEARCH_REPOSITORIES_SUCCESS","payload","SEARCH_REPOSITORIES_ERROR"],"mappings":"AAAA,SAASA,UAAT,QAA2B,iBAA3B;AAUA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,OAAO,EAAE,KADU;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,IAAI,EAAE;AAHa,CAArB;;AAMA,MAAMC,mBAAmB,GAAG,CAACC,KAAwB,GAAGL,YAA5B,EAA0CM,MAA1C,KAAiF;AAE3G,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,UAAU,CAACS,mBAAhB;AACE,aAAO;AAACP,QAAAA,OAAO,EAAE,IAAV;AAAgBC,QAAAA,KAAK,EAAE,IAAvB;AAA6BC,QAAAA,IAAI,EAAE;AAAnC,OAAP;;AACF,SAAKJ,UAAU,CAACU,2BAAhB;AACE,aAAO;AAACR,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAE,IAAxB;AAA8BC,QAAAA,IAAI,EAAEG,MAAM,CAACI;AAA3C,OAAP;;AACF,SAAKX,UAAU,CAACY,yBAAhB;AACE,aAAO;AAACV,QAAAA,OAAO,EAAE,KAAV;AAAiBC,QAAAA,KAAK,EAAEI,MAAM,CAACI,OAA/B;AAAwCP,QAAAA,IAAI,EAAC;AAA7C,OAAP;;AACF;AACE,aAAOE,KAAP;AARJ;AAUD,CAZD;;AAcA,eAAeD,mBAAf","sourcesContent":["import { ActionType } from '../action-types';\nimport { Action } from '../actions';\n\n\ninterface RepositoriesState  {\n  loading: boolean,\n  error: string | null,\n  data: string[]\n}\n\nconst initialState = {\n  loading: false,\n  error: null,\n  data: []\n}\n\nconst repositoriesReducer = (state: RepositoriesState = initialState, action: Action) : RepositoriesState => {\n\n  switch (action.type) {\n    case ActionType.SEARCH_REPOSITORIES:\n      return {loading: true, error: null, data: []}\n    case ActionType.SEARCH_REPOSITORIES_SUCCESS:\n      return {loading: false, error: null, data: action.payload}\n    case ActionType.SEARCH_REPOSITORIES_ERROR:\n      return {loading: false, error: action.payload, data:[]}\n    default:\n      return state\n  }\n};\n\nexport default repositoriesReducer;\n"]},"metadata":{},"sourceType":"module"}