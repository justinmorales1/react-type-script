{"ast":null,"code":"var _jsxFileName = \"/Users/justin/codebase/PublicApps/react-type-script/redux-ts/src/components/RepositoriesList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RepositoriesList = () => {\n  _s();\n\n  const [term, setTerm] = useState('');\n  const {\n    searchRepositories\n  } = useActions();\n  const {\n    data,\n    error,\n    loading\n  } = useTypedSelector(state => state.repositories);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    searchRepositories(term);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: term,\n        onChange: e => setTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 19\n    }, this), !error && !loading && data]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RepositoriesList, \"K/5YwtHnjytTds50OF3AaqXzTHw=\", false, function () {\n  return [useActions, useTypedSelector];\n});\n\n_c = RepositoriesList;\nexport default RepositoriesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"RepositoriesList\");","map":{"version":3,"sources":["/Users/justin/codebase/PublicApps/react-type-script/redux-ts/src/components/RepositoriesList.tsx"],"names":["React","useState","useTypedSelector","useActions","RepositoriesList","term","setTerm","searchRepositories","data","error","loading","state","repositories","onSubmit","event","preventDefault","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,gBAAT,QAAiC,2BAAjC;AACA,SAASC,UAAT,QAA2B,qBAA3B;;;AAEA,MAAMC,gBAA0B,GAAG,MAAM;AAAA;;AACvC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAEM,IAAAA;AAAF,MAAyBJ,UAAU,EAAzC;AACA,QAAM;AAACK,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAAyBR,gBAAgB,CAAES,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAA/C;;AAGA,QAAMC,QAAQ,GAAIC,KAAD,IAA6C;AAC5DA,IAAAA,KAAK,CAACC,cAAN;AAEAR,IAAAA,kBAAkB,CAACF,IAAD,CAAlB;AACD,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAM,MAAA,QAAQ,EAAEQ,QAAhB;AAAA,8BACE;AAAO,QAAA,KAAK,EAAER,IAAd;AAAoB,QAAA,QAAQ,EAAEW,CAAC,IAAIV,OAAO,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV;AAA1C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKGT,KAAK,iBAAI;AAAA,gBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,YALZ,EAMGC,OAAO,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YANd,EAOG,CAACD,KAAD,IAAU,CAACC,OAAX,IAAsBF,IAPzB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAvBD;;GAAMJ,gB;UAE2BD,U,EACAD,gB;;;KAH3BE,gB;AAyBN,eAAeA,gBAAf","sourcesContent":["import React, { useState } from 'react';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport { useActions } from '../hooks/useActions';\n\nconst RepositoriesList: React.FC = () => {\n  const [term, setTerm] = useState('');\n  const { searchRepositories } = useActions();\n  const {data, error, loading} = useTypedSelector((state) => state.repositories)\n\n\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    searchRepositories(term)\n  }\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input value={term} onChange={e => setTerm(e.target.value)}/>\n        <button type=\"submit\">Search</button>\n      </form>\n      {error && <h3>{error}</h3>}\n      {loading && <h3>Loading...</h3>}\n      {!error && !loading && data}\n    </div>\n  )\n};\n\nexport default RepositoriesList;"]},"metadata":{},"sourceType":"module"}